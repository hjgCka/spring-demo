<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util
        https://www.springframework.org/schema/util/spring-util.xsd">

    <!--注册多种后置处理器-->
    <context:annotation-config/>

    <!--<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:com/foo/jdbc.properties"/>
    </bean>-->
    <!--
       这是更推荐的方式，但其实只是实例化了org.springframework.beans.factory.config.PropertyPlaceholderConfigurer对象。
       这个对象是BeanFactoryPostProcessor，作用于bean的配置元数据，用来替换xml文件中的<bean>元素中的占位符。
    -->
    <context:property-placeholder location="classpath:com/hjg/data/jdbc.properties"/>

    <!--想要在代码中使用properties文件内容，需要注入这个bean，且其实际类型为Properties-->
    <!--<bean id="jdbcConfiguration" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location" value="classpath:com/hjg/data/jdbc.properties"/>
    </bean>-->
    <!-- creates a java.util.Properties instance with values loaded from the supplied location -->
    <util:properties id="jdbcConfiguration" location="classpath:com/hjg/data/jdbc.properties"/>

    <bean class="com.hjg.spring.core.model.movie.SimpleMovieCatalog">
        <constructor-arg type="java.lang.String" value="main"/>
        <qualifier value="main"/>
        <!-- 构造一个没有名称的bean，同时赋予限定值main -->
    </bean>

    <bean class="com.hjg.spring.core.model.movie.SimpleMovieCatalog">
        <constructor-arg type="java.lang.String" value="action"/>
        <qualifier value="action"/>
        <!-- 构造一个没有名称的bean，同时赋予限定值action -->
    </bean>

    <bean id="movieRecommender" class="com.hjg.spring.core.model.movie.MovieRecommender"/>

    <!--测试属性编辑器-->
    <bean class="com.hjg.spring.core.javabeans.Company">
        <property name="name" value="Bush"/>
        <property name="managingDirector" value="Jordan|8888"/>
    </bean>

    <!--<bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="propertyEditorRegistrars">
            <list>
                <ref bean="myPropertyEditorRegistrar"/>
            </list>
        </property>
    </bean>

    <bean id="myPropertyEditorRegistrar"
          class="com.hjg.spring.core.conf.editor.MyPropertyEditorRegistrar"/>-->

    <!--如果有这样id的bean，就不会再使用PropertyEditor-->
    <bean id="conversionService"
          class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.hjg.spring.core.conf.convert.MyConverter"/>
            </set>
        </property>
    </bean>

</beans>